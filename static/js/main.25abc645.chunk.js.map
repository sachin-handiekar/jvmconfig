{"version":3,"sources":["context.jsx","components/JVMVendor.jsx","components/JDKVersion.jsx","components/config_params/ConfigNavbar.jsx","components/config_params/Memory.jsx","components/common/Checkbox.jsx","components/common/Select.jsx","components/config_params/ConfigContainer.jsx","components/Summary.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["Context","React","createContext","Provider","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","JDKVersion","minHeapSize","maxHeapSize","heapSizeSelect","defaultPermSize","maxPermSize","permSizeSelect","defaultMetaSpace","maxMetaSpace","metaSpaceSelect","garbageCollector","g1","cms","parallel","additional","handleJDKVersion","setState","handleInput","type","value","defineProperty","inherits","createClass","key","console","log","react_default","a","createElement","objectSpread","props","children","Component","Consumer","Vendor","selected","renderVendors","vendors","map","vend","ind","split","toLowerCase","disabled","onSelectVendor","e","preventDefault","target","htmlFor","className","id","onChange","renderVersions","versions","version","name","_this2","mainState","ConfigNavbar","_this$props","handleActiveNavbar","activeNavbar","Link","to","onClick","Memory","placeholder","Checkbox","renderOptions","data","_ref","text","tooltip","checked","Select","child","renderSuboptions","configuration","selectedChild","filter","options","optionsTitle","ConfigContainer","config_params_ConfigNavbar","config_params_Memory","common_Select","common_Checkbox","debugging","performance","Summery","download","copyToClipboard","str","el","document","setAttribute","style","position","left","body","appendChild","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","handleSaveToPC","jsonData","fileData","JSON","stringify","blob","Blob","url","URL","createObjectURL","link","href","click","setTimeout","window","revokeObjectURL","printGCDetails","enableGCLogRotation","heapDumpOnOOMemory","enableErrorFile","verboseJNI","verboseGC","verboseClass","printGCApplicationConcurrentTime","printGCApplicationStoppedTime","printAssembly","printClassHistogram","printConcurrentLocks","aggressiveOpts","largePages","stringCache","compressedStrings","optimizeStringConcat","defaultMetaspace","elem","x","arrStr","toConsumableArray","hashCodeAlgo","join","readOnly","App","context_Provider","BrowserRouter","action","JVMVendor","components_JDKVersion","config_params_ConfigContainer","Summary","src","alt","data-canonical-src","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25abc645.chunk.js","sourcesContent":["import React, {Component} from \"react\";\r\n\r\nconst Context = React.createContext();\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        JDKVersion: \"6/7\",\r\n        minHeapSize: \"\",\r\n        maxHeapSize: \"\",\r\n        heapSizeSelect: \"\",\r\n        defaultPermSize: \"\",\r\n        maxPermSize: \"\",\r\n        permSizeSelect: \"\",\r\n        defaultMetaSpace: \"\",\r\n        maxMetaSpace: \"\",\r\n        metaSpaceSelect: \"\",\r\n        garbageCollector: \"\",\r\n        g1: \"\",\r\n        cms: \"\",\r\n        parallel: \"\",\r\n        additional: \"\"\r\n    };\r\n\r\n    handleJDKVersion = JDKVersion => {\r\n        this.setState({JDKVersion});\r\n    };\r\n\r\n    handleInput = (type, value) => {\r\n        this.setState({[type]: value});\r\n    };\r\n\r\n    render() {\r\n        console.log(\"======== Main State =========\");\r\n        console.log(this.state);\r\n\r\n        return (\r\n            <Context.Provider\r\n                value={{\r\n                    ...this.state,\r\n                    handleJDKVersion: this.handleJDKVersion,\r\n                    handleInput: this.handleInput\r\n                }}\r\n            >\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Vendor extends Component {\r\n    state = {\r\n        selected: \"\"\r\n    };\r\n\r\n    renderVendors = () => {\r\n        const {vendors} = this.props;\r\n\r\n        return vendors.children.map((vend, ind) => {\r\n            return (\r\n                <option\r\n                    key={ind} // If you will add ids for vendor, use it as a key. It will be better\r\n                    value={vend.value.split(\" \")[0].toLowerCase()}\r\n                    disabled={vend.disabled}\r\n                >\r\n                    {vend.value}\r\n                </option>\r\n            );\r\n        });\r\n    };\r\n\r\n    onSelectVendor = e => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            selected: e.target.value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <label htmlFor=\"jvmVendor\">JVM Vendor:</label>\r\n\r\n                <div className=\"select\">\r\n                    <select\r\n                        id=\"jvmVendor\"\r\n                        value={this.state.selected}\r\n                        onChange={this.onSelectVendor}\r\n                    >\r\n                        {this.renderVendors()}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Vendor;\r\n","import React, {Component} from \"react\";\r\n\r\nimport {Consumer} from \"../context\";\r\n\r\nclass JDKVersion extends Component {\r\n    renderVersions = () => {\r\n        const {versions} = this.props;\r\n\r\n        return versions.children.map(version => {\r\n            return (\r\n                <option\r\n                    id={`jdkVersion${version.value}`}\r\n                    key={`jdkVersion${version.value}`}\r\n                    value={version.value}\r\n                    name=\"jdkVersionRadioGroup\"\r\n                >\r\n                    {version.value}\r\n                </option>\r\n            );\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {mainState => {\r\n                    const {JDKVersion, handleJDKVersion} = mainState;\r\n                    return (\r\n                        <div id=\"jdkVersionSelection\">\r\n                            <label htmlFor=\"jdkVersion\">JDK Version:</label>\r\n\r\n                            <div className=\"select\">\r\n                                <select\r\n                                    id=\"jdkVersion\"\r\n                                    value={JDKVersion}\r\n                                    onChange={e => {\r\n                                        handleJDKVersion(e.target.value);\r\n                                    }}\r\n                                >\r\n                                    {this.renderVersions(JDKVersion, handleJDKVersion)}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JDKVersion;\r\n","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ConfigNavbar extends Component {\r\n    render() {\r\n        const {handleActiveNavbar, activeNavbar} = this.props;\r\n\r\n        return (\r\n            <ul className=\"config-navbar\">\r\n                <Link\r\n                    to=\"#memory\"\r\n                    className={`${activeNavbar === \"memory\" && \"active\"}`}\r\n                    onClick={() => {\r\n                        handleActiveNavbar(\"memory\");\r\n                    }}\r\n                >\r\n                    Memory\r\n                </Link>\r\n\r\n                <Link\r\n                    to=\"#garbageCollector\"\r\n                    className={`${activeNavbar === \"garbageCollector\" && \"active\"}`}\r\n                    onClick={() => {\r\n                        handleActiveNavbar(\"garbageCollector\");\r\n                    }}\r\n                >\r\n                    Garbage Collector\r\n                </Link>\r\n\r\n                <Link\r\n                    to=\"#debugging\"\r\n                    className={`${activeNavbar === \"debugging\" && \"active\"}`}\r\n                    onClick={() => {\r\n                        handleActiveNavbar(\"debugging\");\r\n                    }}\r\n                >\r\n                    Debugging\r\n                </Link>\r\n\r\n                <Link\r\n                    to=\"#performance\"\r\n                    className={`${activeNavbar === \"performance\" && \"active\"}`}\r\n                    onClick={() => {\r\n                        handleActiveNavbar(\"performance\");\r\n                    }}\r\n                >\r\n                    Performance\r\n                </Link>\r\n\r\n                <Link\r\n                    to=\"#additional\"\r\n                    className={`${activeNavbar === \"additional\" && \"active\"}`}\r\n                    onClick={() => {\r\n                        handleActiveNavbar(\"additional\");\r\n                    }}\r\n                >\r\n                    Additional\r\n                </Link>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfigNavbar;\r\n","import React, {Component} from \"react\";\r\n\r\nclass Memory extends Component {\r\n    render() {\r\n        const {activeNavbar, mainState} = this.props;\r\n        const {\r\n            JDKVersion,\r\n            handleInput,\r\n            minHeapSize,\r\n            maxHeapSize,\r\n            heapSizeSelect,\r\n            defaultPermSize,\r\n            maxPermSize,\r\n            permSizeSelect,\r\n            defaultMetaSpace,\r\n            maxMetaSpace,\r\n            metaSpaceSelect\r\n        } = mainState;\r\n\r\n        return (\r\n            <div\r\n                id=\"memory\"\r\n                className={`tab-pane ${activeNavbar === \"memory\" ? \"active\" : \"hide\"}`}\r\n            >\r\n                <div>\r\n                    <label htmlFor=\"jdkVersion\">Heap Size</label>\r\n\r\n                    <div>\r\n                        <div>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"minHeapSize\"\r\n                                placeholder=\"min\"\r\n                                type=\"text\"\r\n                                value={minHeapSize}\r\n                                onChange={e => {\r\n                                    handleInput(\"minHeapSize\", e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input\r\n                                className=\"form-control\"\r\n                                id=\"maxHeapSize\"\r\n                                placeholder=\"max\"\r\n                                type=\"text\"\r\n                                value={maxHeapSize}\r\n                                onChange={e => {\r\n                                    handleInput(\"maxHeapSize\", e.target.value);\r\n                                }}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"select\">\r\n                            <select\r\n                                className=\"form-control\"\r\n                                id=\"heapSizeSelect\"\r\n                                value={heapSizeSelect}\r\n                                onChange={e => {\r\n                                    handleInput(\"heapSizeSelect\", e.target.value);\r\n                                }}\r\n                            >\r\n                                <option value=\"\">Kb</option>\r\n                                <option value=\"M\">Mb</option>\r\n                                <option value=\"G\">Gb</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {JDKVersion === \"6/7\" && (\r\n                    <div id=\"permSize\">\r\n                        <label htmlFor=\"permSize\">Perm Size</label>\r\n\r\n                        <div>\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    id=\"defaultPermSize\"\r\n                                    placeholder=\"default\"\r\n                                    type=\"text\"\r\n                                    value={defaultPermSize}\r\n                                    onChange={e => {\r\n                                        handleInput(\"defaultPermSize\", e.target.value);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    id=\"maxPermSize\"\r\n                                    placeholder=\"max\"\r\n                                    type=\"text\"\r\n                                    value={maxPermSize}\r\n                                    onChange={e => {\r\n                                        handleInput(\"maxPermSize\", e.target.value);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"select\">\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    id=\"permSizeSelect\"\r\n                                    value={permSizeSelect}\r\n                                    onChange={e => {\r\n                                        handleInput(\"permSizeSelect\", e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Kb</option>\r\n                                    <option value=\"M\">Mb</option>\r\n                                    <option value=\"G\">Gb</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {JDKVersion === \"8\" && (\r\n                    <div id=\"metaSpace\">\r\n                        <label htmlFor=\"metaspace\">Metaspace</label>\r\n\r\n                        <div>\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    id=\"defaultMetaSpace\"\r\n                                    placeholder=\"default\"\r\n                                    type=\"text\"\r\n                                    value={defaultMetaSpace}\r\n                                    onChange={e => {\r\n                                        handleInput(\"defaultMetaSpace\", e.target.value);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div>\r\n                                <input\r\n                                    className=\"form-control\"\r\n                                    id=\"maxMetaSpace\"\r\n                                    placeholder=\"max\"\r\n                                    type=\"text\"\r\n                                    value={maxMetaSpace}\r\n                                    onChange={e => {\r\n                                        handleInput(\"maxMetaSpace\", e.target.value);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"select\">\r\n                                <select\r\n                                    className=\"form-control\"\r\n                                    id=\"metaSpaceSelect\"\r\n                                    value={metaSpaceSelect}\r\n                                    onChange={e => {\r\n                                        handleInput(\"metaSpaceSelect\", e.target.value);\r\n                                    }}\r\n                                >\r\n                                    <option value=\"\">Kb</option>\r\n                                    <option value=\"M\">Mb</option>\r\n                                    <option value=\"G\">Gb</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Memory;\r\n","import React, {Component} from \"react\";\r\n\r\nimport {Consumer} from \"../../context\";\r\n\r\nclass Checkbox extends Component {\r\n    renderOptions = handleInput => {\r\n        const {data} = this.props;\r\n\r\n        return data.children.map(({id, text, value, tooltip}) => (\r\n            <div key={id}>\r\n                <label className=\"checkbox\" htmlFor={id}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name={id.toLowerCase()}\r\n                        id={id}\r\n                        onChange={e => {\r\n                            e.target.checked ? handleInput(id, value) : handleInput(id, \"\");\r\n                        }}\r\n                    />\r\n                    <span className=\"checmark\"/>\r\n                    {text}\r\n                    <p className=\"tooltip\" tooltip={tooltip}>\r\n                        !\r\n                    </p>\r\n                </label>\r\n            </div>\r\n        ));\r\n    };\r\n\r\n    render() {\r\n        const {activeNavbar, type, data} = this.props;\r\n\r\n        return (\r\n            <Consumer>\r\n                {mainState => {\r\n                    const {handleInput} = mainState;\r\n\r\n                    return (\r\n                        <div\r\n                            id={data.id}\r\n                            className={`tab-pane  ${\r\n                                activeNavbar === type ? \"active\" : \"hide\"\r\n                                }`}\r\n                        >\r\n                            {this.renderOptions(handleInput)}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkbox;\r\n","import React, {Component} from \"react\";\r\n\r\nimport {Consumer} from \"../../context\";\r\n\r\nclass Select extends Component {\r\n    state = {};\r\n\r\n    renderOptions = () => {\r\n        const {data} = this.props;\r\n\r\n        return data.children.map(child => {\r\n            return (\r\n                <option key={child.id} value={child.value} disabled={child.disabled}>\r\n                    {child.text}\r\n                </option>\r\n            );\r\n        });\r\n    };\r\n\r\n    renderSuboptions = (data, mainState, configuration) => {\r\n        const selectedChild = data.children.filter(\r\n            child => child.id === (mainState.additional || mainState.garbageCollector)\r\n        )[0];\r\n\r\n        if (selectedChild && selectedChild.options) {\r\n            return (\r\n                <div className=\"sub-options\">\r\n                    <p>{selectedChild.optionsTitle}</p>\r\n                    {selectedChild.options.map(({id, value, text, tooltip}) => {\r\n                        return (\r\n                            <div key={id}>\r\n                                <label htmlFor={id}>\r\n                                    {text}\r\n                                    <p className=\"tooltip\" tooltip={tooltip}>\r\n                                        !\r\n                                    </p>\r\n                                </label>\r\n\r\n                                <input\r\n                                    type=\"text\"\r\n                                    name={id.toLowerCase()}\r\n                                    id={id}\r\n                                    onChange={e => {\r\n                                        mainState.handleInput(\r\n                                            [id],\r\n                                            configuration[id] + e.target.value\r\n                                        );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            );\r\n        } else {\r\n            return [];\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {activeNavbar, type, data, configuration} = this.props;\r\n\r\n        return (\r\n            <Consumer>\r\n                {mainState => {\r\n                    return (\r\n                        <div\r\n                            id={data.id}\r\n                            className={`tab-pane ${\r\n                                activeNavbar === type ? \"active\" : \"hide\"\r\n                                }`}\r\n                        >\r\n                            <label htmlFor={data.id}>{data.text} :</label>\r\n\r\n                            <div className=\"select\">\r\n                                <select\r\n                                    value={\r\n                                        data.id === \"additional\"\r\n                                            ? mainState.additional\r\n                                            : mainState.garbageCollector\r\n                                    }\r\n                                    onChange={e => {\r\n                                        mainState.handleInput(data.id, e.target.value);\r\n                                    }}\r\n                                >\r\n                                    {this.renderOptions()}\r\n                                </select>\r\n                            </div>\r\n\r\n                            {this.renderSuboptions(data, mainState, configuration)}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;","import React, {Component} from \"react\";\r\n\r\nimport {Consumer} from \"../../context\";\r\n\r\n// Components\r\nimport ConfigNavbar from \"./ConfigNavbar\";\r\nimport Memory from \"./Memory\";\r\nimport Checkbox from \"../common/Checkbox\";\r\nimport Select from \"../common/Select\";\r\n\r\nclass ConfigContainer extends Component {\r\n    state = {\r\n        activeNavbar: \"memory\"\r\n    };\r\n\r\n    handleActiveNavbar = activeNavbar => {\r\n        this.setState({activeNavbar});\r\n    };\r\n\r\n    render() {\r\n        const {activeNavbar} = this.state;\r\n        const {data} = this.props;\r\n\r\n        return (\r\n            <Consumer>\r\n                {mainState => {\r\n                    return (\r\n                        <div id=\"config-container\">\r\n                            <ConfigNavbar\r\n                                activeNavbar={activeNavbar}\r\n                                handleActiveNavbar={this.handleActiveNavbar}\r\n                            />\r\n\r\n                            <div>\r\n                                <Memory\r\n                                    configuration={data.configuration}\r\n                                    activeNavbar={activeNavbar}\r\n                                    mainState={mainState}\r\n                                />\r\n\r\n                                <Select\r\n                                    type=\"garbageCollector\"\r\n                                    data={data.garbageCollector}\r\n                                    configuration={data.configuration}\r\n                                    activeNavbar={activeNavbar}\r\n                                    mainState={mainState}\r\n                                />\r\n\r\n                                <Checkbox\r\n                                    type=\"debugging\"\r\n                                    data={data.debugging}\r\n                                    activeNavbar={activeNavbar}\r\n                                    mainState={mainState}\r\n                                />\r\n\r\n                                <Checkbox\r\n                                    type=\"performance\"\r\n                                    data={data.performance}\r\n                                    activeNavbar={activeNavbar}\r\n                                    mainState={mainState}\r\n                                />\r\n\r\n                                <Select\r\n                                    type=\"additional\"\r\n                                    data={data.additional}\r\n                                    activeNavbar={activeNavbar}\r\n                                    mainState={mainState}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ConfigContainer;","import React, {Component} from \"react\";\r\n\r\nimport {Consumer} from \"../context\";\r\n\r\nclass Summery extends Component {\r\n    state = {\r\n        download: false,\r\n        value: \"\"\r\n    };\r\n\r\n    copyToClipboard = str => {\r\n        const el = document.createElement(\"textarea\");\r\n        el.value = str;\r\n        el.setAttribute(\"readonly\", \"\");\r\n        el.style.position = \"absolute\";\r\n        el.style.left = \"-9999px\";\r\n        document.body.appendChild(el);\r\n        const selected =\r\n            document.getSelection().rangeCount > 0\r\n                ? document.getSelection().getRangeAt(0)\r\n                : false;\r\n        el.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(el);\r\n        if (selected) {\r\n            document.getSelection().removeAllRanges();\r\n            document.getSelection().addRange(selected);\r\n        }\r\n    };\r\n\r\n    handleSaveToPC = jsonData => {\r\n        const fileData = JSON.stringify(jsonData);\r\n        const blob = new Blob([fileData], {type: \"text/plain\"});\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement(\"a\");\r\n        link.download = \"filename.txt\";\r\n        document.body.appendChild(link);\r\n        link.href = url;\r\n        link.click();\r\n        setTimeout(function () {\r\n            document.body.removeChild(link);\r\n            window.URL.revokeObjectURL(url);\r\n        }, 100);\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.download) {\r\n            this.handleSaveToPC(this.state.value);\r\n            this.setState({download: false});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {configuration} = this.props.data;\r\n\r\n        return (\r\n            <Consumer>\r\n                {mainState => {\r\n                    let {\r\n                        JDKVersion,\r\n                        minHeapSize,\r\n                        maxHeapSize,\r\n                        heapSizeSelect,\r\n                        defaultPermSize,\r\n                        maxPermSize,\r\n                        permSizeSelect,\r\n                        defaultMetaSpace,\r\n                        maxMetaSpace,\r\n                        metaSpaceSelect,\r\n                        garbageCollector,\r\n                        printGCDetails,\r\n                        enableGCLogRotation,\r\n                        heapDumpOnOOMemory,\r\n                        enableErrorFile,\r\n                        verboseJNI,\r\n                        verboseGC,\r\n                        verboseClass,\r\n                        printGCApplicationConcurrentTime,\r\n                        printGCApplicationStoppedTime,\r\n                        printAssembly,\r\n                        printClassHistogram,\r\n                        printConcurrentLocks,\r\n                        additional,\r\n                        aggressiveOpts,\r\n                        largePages,\r\n                        stringCache,\r\n                        compressedStrings,\r\n                        optimizeStringConcat\r\n                    } = mainState;\r\n\r\n                    minHeapSize = minHeapSize\r\n                        ? configuration.minHeapSize + minHeapSize + heapSizeSelect\r\n                        : \"\";\r\n\r\n                    maxHeapSize = maxHeapSize\r\n                        ? configuration.maxHeapSize + maxHeapSize + heapSizeSelect\r\n                        : \"\";\r\n\r\n                    defaultPermSize = defaultPermSize\r\n                        ? configuration.defaultPermSize + defaultPermSize + permSizeSelect\r\n                        : \"\";\r\n\r\n                    maxPermSize = maxPermSize\r\n                        ? configuration.maxPermSize + maxPermSize + permSizeSelect\r\n                        : \"\";\r\n\r\n                    defaultMetaSpace = defaultMetaSpace\r\n                        ? configuration.defaultMetaspace +\r\n                        defaultMetaSpace +\r\n                        metaSpaceSelect\r\n                        : \"\";\r\n\r\n                    maxMetaSpace = maxMetaSpace\r\n                        ? configuration.maxMetaSpace + maxMetaSpace + metaSpaceSelect\r\n                        : \"\";\r\n\r\n                    // Get options of garbage collector\r\n                    let elem = this.props.data.garbageCollector.children.filter(x => {\r\n                        return x.id === garbageCollector;\r\n                    })[0];\r\n\r\n                    let options = [];\r\n                    if (elem && elem.options) {\r\n                        options = elem.options.map(x => mainState[x.id]);\r\n                    }\r\n\r\n                    if (garbageCollector === \"g1\") {\r\n                        garbageCollector = configuration.g1;\r\n                    } else if (garbageCollector === \"cms\") {\r\n                        garbageCollector = configuration.cms;\r\n                    } else if (garbageCollector === \"parallel\") {\r\n                        garbageCollector = configuration.parallel;\r\n                    } else {\r\n                        garbageCollector = \"\";\r\n                    }\r\n\r\n                    let arrStr = [\r\n                        minHeapSize,\r\n                        maxHeapSize,\r\n                        JDKVersion === \"6/7\" ? defaultPermSize : defaultMetaSpace,\r\n                        JDKVersion === \"6/7\" ? maxPermSize : maxMetaSpace,\r\n                        garbageCollector,\r\n                        ...options,\r\n                        printGCDetails,\r\n                        enableGCLogRotation,\r\n                        heapDumpOnOOMemory,\r\n                        enableErrorFile,\r\n                        verboseJNI,\r\n                        verboseGC,\r\n                        verboseClass,\r\n                        printGCApplicationConcurrentTime,\r\n                        printGCApplicationStoppedTime,\r\n                        printAssembly,\r\n                        printClassHistogram,\r\n                        printConcurrentLocks,\r\n                        additional ? configuration.hashCodeAlgo + additional : \"\",\r\n                        aggressiveOpts,\r\n                        largePages,\r\n                        stringCache,\r\n                        compressedStrings,\r\n                        optimizeStringConcat\r\n                    ];\r\n\r\n                    return (\r\n                        <div id=\"summary\">\r\n                            <label htmlFor=\"jvmFlagResult\">JVM Flags</label>\r\n\r\n                            <textarea\r\n                                id=\"jvmFlagResult\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"JVM Options Summary\"\r\n                                value={`-server ${arrStr.filter(str => str).join(\" \")}`}\r\n                                readOnly\r\n                            />\r\n\r\n                            <div>\r\n                                <button\r\n                                    id=\"copy\"\r\n                                    onClick={e => {\r\n                                        e.preventDefault();\r\n                                        this.copyToClipboard(\r\n                                            `-server ${arrStr.filter(str => str).join(\" \")}`\r\n                                        );\r\n                                    }}\r\n                                >\r\n                                    Copy To Clipboard\r\n                                </button>\r\n\r\n                                <button\r\n                                    id=\"download\"\r\n                                    onClick={e => {\r\n                                        e.preventDefault();\r\n                                        this.setState({\r\n                                            download: true,\r\n                                            value: `-server ${arrStr.filter(str => str).join(\" \")}`\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    Download as text\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Summery;\r\n","import React, {Component} from \"react\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport \"./App.css\";\n// Import data\nimport data from \"./data/data.json\";\n// Import Provider\nimport {Provider} from \"./context\";\n// Import Components\nimport JVMVendor from \"./components/JVMVendor\";\nimport JDKVersion from \"./components/JDKVersion\";\nimport ConfigContainer from \"./components/config_params/ConfigContainer\";\nimport Summary from \"./components/Summary\";\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider>\n                <Router>\n                    <div className=\"App\">\n\n                        <div className=\"container\">\n                            <h4>JVM Options Configuration Tool</h4>\n\n                            <p className=\"description\">\n                                A JVM config tool which can be used to configure various\n                                flags/parameters used in changing behaviour & debugging features\n                                within the JVM\n                            </p>\n\n                            <form id=\"form\" action=\"\">\n                                <div>\n                                    <JVMVendor vendors={data.JVMVendor}/>\n                                    <JDKVersion versions={data.JDKVersion}/>\n                                </div>\n\n                                <ConfigContainer data={data}/>\n\n                                <Summary data={data}/>\n                            </form>\n\n                            <a\n                                className=\"github\"\n                                href=\"https://github.com/sachin-handiekar/jvmconfig\"\n                            >\n                                <img\n                                    src=\"https://camo.githubusercontent.com/38ef81f8aca64bb9a64448d0d70f1308ef5341ab/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6461726b626c75655f3132313632312e706e67\"\n                                    alt=\"Fork me on GitHub\"\n                                    data-canonical-src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\"\n                                />\n                            </a>\n                            <footer id=\"footer\">\n                                Developed by{\" \"}\n                                <a href=\"https://sachinhandiekar.com/\">Sachin Handiekar</a>\n                            </footer>\n                        </div>\n                    </div>\n                </Router>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App/>, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}