{
  "JVMVendor": {
    "id": "jvmVendor",
    "children": [
      {
        "value": "Oracle",
        "disabled": false
      }
    ],
    "tooltip": "JVM Vendor"
  },
  "JDKVersion": {
    "id": "jdkVersion",
    "children": [
      {
        "value": "6/7"
      },
      {
        "value": "8"
      },
      {
        "value": "9"
      },
      {
        "value": "10"
      },
      {
        "value": "11 (LTS)"
      },
      {
        "value": "12"
      },
      {
        "value": "13"
      },
      {
        "value": "14"
      },
      {
        "value": "15"
      },
      {
        "value": "16"
      },
      {
        "value": "17 (LTS)"
      },
      {
        "value": "18"
      },
      {
        "value": "19"
      },
      {
        "value": "20"
      },
      {
        "value": "21 (LTS)"
      }
    ],
    "tooltip": "JDK Version"
  },
  "debugging": {
    "id": "debugging",
    "children": [
      {
        "id": "printGCDetails",
        "text": "Enable GC Logging ",
        "value": "-Xlog:gc*",
        "tooltip": "Print GC Details (JDK 9+)",
        "legacyValue": "-XX:+PrintGCDetails",
        "minVersion": 9
      },
      {
        "id": "enableGCLogRotation",
        "text": "Enable GC Log Rotation ",
        "value": "-Xlog:gc*:file=gc_%t.log::filecount=5,filesize=100M",
        "tooltip": "Enable GC Log Rotation with file size limit and rotation",
        "legacyValue": "-Xloggc:gc.log.'date +%Y%m%d%H%M%S' -XX:+UseGCLogFileRotation",
        "minVersion": 9
      },
      {
        "id": "heapDumpOnOOMemory",
        "text": "Enable HeapDump on OutOfMemoryError",
        "value": "-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/heapDump.hprof",
        "tooltip": "Heap dump on OutOfMemory Error"
      },
      {
        "id": "enableErrorFile",
        "text": "Save Error data on a file ",
        "value": "-XX:ErrorFile=/path/to/error_file.log",
        "tooltip": "If an error occurs, save the error data to this file."
      },
      {
        "id": "verboseJNI",
        "text": "Verbose logging of JNI ",
        "value": "-Xlog:jni+resolve=debug",
        "tooltip": "JNI debugging and resolution information",
        "legacyValue": "-verbose:jni",
        "minVersion": 9
      },
      {
        "id": "verboseGC",
        "text": "Verbose logging of garbage collection (GC)",
        "value": "-Xlog:gc",
        "tooltip": "Basic GC logging",
        "legacyValue": "-verbose:gc",
        "minVersion": 9
      },
      {
        "id": "verboseClass",
        "text": "Verbose logging of class loading",
        "value": "-Xlog:class+load=info",
        "tooltip": "Class loading information",
        "legacyValue": "-verbose:class",
        "minVersion": 9
      },
      {
        "id": "printGCApplicationConcurrentTime",
        "text": "Print GC Application Concurrent Time",
        "value": "-Xlog:safepoint",
        "tooltip": "Print safepoint and application concurrent time information",
        "legacyValue": "-XX:+PrintGCApplicationConcurrentTime",
        "minVersion": 9
      },
      {
        "id": "printGCApplicationStoppedTime",
        "text": "Print GC Application Stopped Time ",
        "value": "-Xlog:safepoint",
        "tooltip": "Print safepoint statistics including stopped time",
        "legacyValue": "-XX:+PrintGCApplicationStoppedTime",
        "minVersion": 9
      },
      {
        "id": "printAssembly",
        "text": "Print assembly",
        "value": "-XX:+PrintAssembly",
        "tooltip": "Print assembly code for bytecoded and native methods."
      },
      {
        "id": "printClassHistogram",
        "text": "Print class histogram",
        "value": "-XX:+PrintClassHistogram",
        "tooltip": "Print a histogram of class instances"
      },
      {
        "id": "printConcurrentLocks",
        "text": "Print Concurrent Locks ",
        "value": "-XX:+PrintConcurrentLocks",
        "tooltip": "Print java.util.concurrent locks in thread dump"
      },
      {
        "id": "jfrStartFlight",
        "text": "Start Flight Recorder",
        "value": "-XX:StartFlightRecording=duration=60s,filename=recording.jfr",
        "tooltip": "Start JFR recording on JVM startup",
        "minVersion": 11
      },
      {
        "id": "enableCDS",
        "text": "Enable Class Data Sharing",
        "value": "-XX:+UseSharedArchive -XX:SharedArchiveFile=app.jsa",
        "tooltip": "Enable CDS to improve startup time",
        "minVersion": 10
      }
    ]
  },
  "performance": {
    "id": "performance",
    "children": [
      {
        "id": "aggressiveOpts",
        "text": "Enable Aggressive Opts",
        "value": "-XX:+AggressiveOpts",
        "tooltip": "Enable aggressive optimizations - deprecated in JDK 11+",
        "maxVersion": 10
      },
      {
        "id": "largePages",
        "text": "Enable Large Pages",
        "value": "-XX:+UseLargePages",
        "tooltip": "Enable Large Pages"
      },
      {
        "id": "stringDeduplication",
        "text": "Enable String Deduplication",
        "value": "-XX:+UseStringDeduplication",
        "tooltip": "Enables string deduplication in G1 GC",
        "minVersion": 8
      },
      {
        "id": "compactStrings",
        "text": "Enable Compact Strings",
        "value": "-XX:+CompactStrings",
        "tooltip": "Enables more memory-efficient string storage",
        "minVersion": 9
      },
      {
        "id": "enableDynamicAgentLoading",
        "text": "Enable Dynamic Agent Loading",
        "value": "-XX:+EnableDynamicAgentLoading",
        "tooltip": "Enables dynamic attachment of agents to the JVM",
        "minVersion": 10
      },
      {
        "id": "useZGC",
        "text": "Use Z Garbage Collector",
        "value": "-XX:+UseZGC",
        "tooltip": "Enable the Z Garbage Collector - low latency GC",
        "minVersion": 11
      },
      {
        "id": "useShenandoahGC",
        "text": "Use Shenandoah Garbage Collector",
        "value": "-XX:+UseShenandoahGC",
        "tooltip": "Enable the Shenandoah Garbage Collector",
        "minVersion": 12
      },
      {
        "id": "enablePreview",
        "text": "Enable Preview Features",
        "value": "--enable-preview",
        "tooltip": "Enable preview language features",
        "minVersion": 12
      }
    ]
  },
  "garbageCollector": {
    "id": "garbageCollector",
    "text": "GC Collector",
    "children": [
      {
        "id": "default",
        "value": "default",
        "text": "Default (G1 for JDK 9+)"
      },
      {
        "id": "cms",
        "value": "cms",
        "text": "CMS (low pause)",
        "maxVersion": 14
      },
      {
        "id": "parallel",
        "value": "parallel",
        "text": "Parallel (throughput)"
      },
      {
        "id": "g1",
        "value": "g1",
        "text": "G1 (low pause)",
        "optionsTitle": "Garbage First (G1) Garbage Collection Options",
        "options": [
          {
            "id": "g1gcMaxGCPauseTime",
            "text": "Set Max. GC pause time ",
            "value": "-XX:MaxGCPauseMillis=",
            "tooltip": "Sets a target for the maximum GC pause time. This is a soft goal, and the JVM will make its best effort to achieve it."
          },
          {
            "id": "g1gcInitiatingHeapOccupancyPercent",
            "text": "Initiating Heap Occupancy Percent",
            "value": "-XX:InitiatingHeapOccupancyPercent=",
            "tooltip": "Percentage of the (entire) heap occupancy to start a concurrent GC cycle. Default value is 45."
          },
          {
            "id": "g1gcRegionSize",
            "text": "G1 Region Size",
            "value": "-XX:G1HeapRegionSize=",
            "tooltip": "Size of G1 regions. Default value is based on heap size.",
            "minVersion": 9
          },
          {
            "id": "g1gcReservePercent",
            "text": "G1 Reserve Percent",
            "value": "-XX:G1ReservePercent=",
            "tooltip": "Sets the amount of heap that is reserved to handle promotion failure.",
            "minVersion": 9
          }
        ]
      },
      {
        "id": "zgc",
        "value": "zgc",
        "text": "ZGC (ultra-low pause)",
        "minVersion": 11,
        "options": [
          {
            "id": "zgcMaxCompactionPause",
            "text": "ZGC Max Compaction Pause",
            "value": "-XX:ZMaxCompactionPause=",
            "tooltip": "Maximum allowed pause time during ZGC compaction"
          },
          {
            "id": "zgcGenerational",
            "text": "Enable Generational ZGC",
            "value": "-XX:+ZGenerational",
            "tooltip": "Enable generational collection in ZGC",
            "minVersion": 17
          }
        ]
      },
      {
        "id": "shenandoah",
        "value": "shenandoah",
        "text": "Shenandoah (ultra-low pause)",
        "minVersion": 12,
        "options": [
          {
            "id": "shenandoahGCMode",
            "text": "Shenandoah GC Mode",
            "value": "-XX:ShenandoahGCMode=",
            "tooltip": "Set Shenandoah GC mode (passive,adaptive,aggressive)"
          },
          {
            "id": "shenandoahGuaranteedGCInterval",
            "text": "Guaranteed GC Interval",
            "value": "-XX:ShenandoahGuaranteedGCInterval=",
            "tooltip": "Time between guaranteed GC cycles (in milliseconds)"
          }
        ]
      }
    ]
  },
  "additional": {
    "id": "additional",
    "text": "Hashcode algorithm",
    "children": [
      {
        "id": "default",
        "value": "",
        "text": "default"
      },
      {
        "id": "parkMiller",
        "value": 0,
        "text": "Park-Miller RNG (default until Java 7)"
      },
      {
        "id": "globalState",
        "value": 1,
        "text": "f (address, global state)"
      },
      {
        "id": "const",
        "value": 2,
        "text": "Const 1"
      },
      {
        "id": "sequenceCounter",
        "value": 3,
        "text": "Sequence Counter"
      },
      {
        "id": "objectAddress",
        "value": 4,
        "text": "Object address"
      },
      {
        "id": "threadLocal",
        "value": 5,
        "text": "Thread-local Xorshift"
      }
    ]
  },
  "configuration": {
    "minHeapSize": "-Xms",
    "maxHeapSize": "-Xmx",
    "defaultPermSize": "-XX:PermSize=",
    "maxPermSize": "-XX:MaxPermSize=",
    "defaultMetaspace": "-XX:MetaspaceSize=",
    "maxMetaSpace": "-XX:MaxMetaspaceSize=",
    "g1": "-XX:+UseG1GC",
    "cms": "-XX:+UseConcMarkSweepGC",
    "parallel": "-XX:+UseParNewGC -XX:+UseConcMarkSweepGC",
    "zgc": "-XX:+UseZGC",
    "shenandoah": "-XX:+UseShenandoahGC",
    "printGCDetails": "-Xlog:gc*",
    "enableGCLogRotation": "-Xlog:gc*:file=gc_%t.log::filecount=5,filesize=100M",
    "heapDumpOnOOMemory": "-XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=/tmp/heapDump.hprof",
    "enableErrorFile": "-XX:ErrorFile=/path/to/error_file.log",
    "verboseJNI": "-Xlog:jni+resolve=debug",
    "verboseGC": "-Xlog:gc",
    "verboseClass": "-Xlog:class+load=info",
    "printGCApplicationConcurrentTime": "-Xlog:safepoint",
    "printGCApplicationStoppedTime": "-Xlog:safepoint",
    "printAssembly": "-XX:+PrintAssembly",
    "printClassHistogram": "-XX:+PrintClassHistogram",
    "printConcurrentLocks": "-XX:+PrintConcurrentLocks",
    "hashCodeAlgo": "-XX:hashCode=",
    "aggressiveOpts": "-XX:+AggressiveOpts",
    "largePages": "-XX:+UseLargePages",
    "stringDeduplication": "-XX:+UseStringDeduplication",
    "compactStrings": "-XX:+CompactStrings",
    "enableDynamicAgentLoading": "-XX:+EnableDynamicAgentLoading",
    "g1gcMaxGCPauseTime": "-XX:MaxGCPauseMillis=",
    "g1gcInitiatingHeapOccupancyPercent": "-XX:InitiatingHeapOccupancyPercent=",
    "g1gcRegionSize": "-XX:G1HeapRegionSize=",
    "g1gcReservePercent": "-XX:G1ReservePercent=",
    "zgcMaxCompactionPause": "-XX:ZMaxCompactionPause=",
    "zgcGenerational": "-XX:+ZGenerational",
    "shenandoahGCMode": "-XX:ShenandoahGCMode=",
    "shenandoahGuaranteedGCInterval": "-XX:ShenandoahGuaranteedGCInterval="
  }
}
